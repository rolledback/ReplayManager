/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.rolledback.manager;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.Scanner;

import javax.swing.JOptionPane;

/**
 *
 * @author Matthew
 */
public class ReplayManagerUI extends javax.swing.JFrame {
    int currentReplay = 0;
    int currentSort = 0;
    Interpreter replays;
    String list[];
    /**
     * Creates new form ReplayManagerUI
     */
    public ReplayManagerUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        directory = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        sortBox = new javax.swing.JComboBox();
        refresh = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        replayList = new javax.swing.JList();
        jScrollPane1 = new javax.swing.JScrollPane();
        details = new javax.swing.JTextArea();
        open = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        deafultDir = new javax.swing.JButton();
        gameNum = new javax.swing.JLabel();
        gameCountry = new javax.swing.JLabel();
        gameVehicle = new javax.swing.JLabel();
        gameDate = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        save = new javax.swing.JButton();
        gameMap = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Replay Manager"));

        jLabel1.setText("Replay Directory:");

        directory.setText("C:\\Games\\World_of_Tanks\\replays\\Saved");

        jLabel2.setText("View by:");

        sortBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Game Number", "Date", "Country", "Tank", "Map" }));
        sortBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortBoxActionPerformed(evt);
            }
        });

        refresh.setText("Refresh");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        replayList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = {};
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        replayList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                replayListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(replayList);

        details.setColumns(20);
        details.setLineWrap(true);
        details.setRows(5);
        jScrollPane1.setViewportView(details);

        open.setText("Open Replay");
        open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openActionPerformed(evt);
            }
        });

        delete.setText("Delete Replay");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        deafultDir.setText("Default Directory");
        deafultDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deafultDirActionPerformed(evt);
            }
        });

        gameNum.setText("Number:");

        gameCountry.setText("Country:");

        gameVehicle.setText("Tank Used:");

        gameDate.setText("Date Recorded:");

        jLabel3.setText("Game Description:");

        save.setText("Save Description");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        gameMap.setText("Map:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sortBox, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(open)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(delete))
                    .addComponent(directory))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(deafultDir)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(refresh))
                                .addComponent(gameVehicle)
                                .addComponent(gameDate)
                                .addComponent(gameNum)
                                .addComponent(gameCountry)
                                .addComponent(jLabel3)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(save, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(gameMap)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(directory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refresh)
                    .addComponent(deafultDir))
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(sortBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(gameNum)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gameCountry)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gameVehicle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gameMap)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gameDate)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete)
                    .addComponent(open)
                    .addComponent(save))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        replays = new Interpreter(directory.getText());
        list = new String[replays.ReplayList.size()];
        for(int x = 0; x < replays.ReplayList.size(); x++)
            list[x] = replays.ReplayList.get(x).partialInfo(currentSort);
        replayList.setListData(list);
    }//GEN-LAST:event_refreshActionPerformed

    private void replayListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_replayListValueChanged
        try { 
            currentReplay = replayList.getSelectedIndex();
            gameNum.setText(replays.ReplayList.get(currentReplay).getNumber());
            gameCountry.setText(replays.ReplayList.get(currentReplay).getCountry());
            gameVehicle.setText(replays.ReplayList.get(currentReplay).getTank());
            gameMap.setText(replays.ReplayList.get(currentReplay).getMap());
            gameDate.setText(replays.ReplayList.get(currentReplay).getDate());            
        }
        catch(Exception e) {}
        details.setText("");
        try {
        	Scanner des = new Scanner(new File("descriptions.dat"));
            String temp = "";
            while((temp = des.nextLine()) != null) {
            	if(temp.equals(replays.ReplayList.get(currentReplay).name)) {
            			details.setText(des.nextLine());
            	}            	
            }
        }
        catch(Exception e) {}
        
    }//GEN-LAST:event_replayListValueChanged

    private void sortBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortBoxActionPerformed
        currentSort = sortBox.getSelectedIndex();
        if(list != null)
            refreshActionPerformed(evt);
    }//GEN-LAST:event_sortBoxActionPerformed

    private void openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openActionPerformed
        try {
            File temp = new File(replays.ReplayList.get(currentReplay).path);
            try{Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + temp);} catch(Exception e){}
        }
        catch(Exception e){}
    }//GEN-LAST:event_openActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure?");
            if (confirm == JOptionPane.YES_OPTION) {
                try {
                    File temp = new File(replays.ReplayList.get(currentReplay).path);
                    temp.delete();
                    replays.ReplayList.remove(currentReplay);
                    refreshActionPerformed(evt);
                }
                catch(Exception e){}              
            }
    }//GEN-LAST:event_deleteActionPerformed

    private void deafultDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deafultDirActionPerformed
        File config = new File("config.dat");
        try {
            Scanner input = new Scanner(config);
            directory.setText(input.nextLine());
        }
        catch(Exception e){}
    }//GEN-LAST:event_deafultDirActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
    	ArrayList<String> descriptions = new ArrayList<String>();
    	try {    		
    		Scanner des = new Scanner(new File("descriptions.dat"));
    		String temp = "";
    		while((temp = des.nextLine()) != null) {
    			descriptions.add(temp);
    		}        	
        }
    	catch(Exception e){}
    	
    	for(int x = 0; x < descriptions.size(); x++) {
    		if(descriptions.get(x).equals(replays.ReplayList.get(currentReplay).name)) {
    			descriptions.remove(x + 1);
    			descriptions.remove(x);
    		}    		
    	}
    	
    	descriptions.add(replays.ReplayList.get(currentReplay).name);
    	descriptions.add(details.getText());
    	try {
    		FileWriter outFile = new FileWriter("descriptions.dat"); 
    		BufferedWriter outStream = new BufferedWriter(outFile); 
    		for(int x = 0; x < descriptions.size(); x++) {
    			outStream.write(descriptions.get(x));
    			outStream.newLine();
    		}
    		outStream.close();        	
    	}
    	catch(Exception e){}
    }//GEN-LAST:event_saveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReplayManagerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReplayManagerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReplayManagerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReplayManagerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ReplayManagerUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deafultDir;
    private javax.swing.JButton delete;
    private javax.swing.JTextArea details;
    private javax.swing.JTextField directory;
    private javax.swing.JLabel gameCountry;
    private javax.swing.JLabel gameDate;
    private javax.swing.JLabel gameMap;
    private javax.swing.JLabel gameNum;
    private javax.swing.JLabel gameVehicle;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton open;
    private javax.swing.JButton refresh;
    private javax.swing.JList replayList;
    private javax.swing.JButton save;
    private javax.swing.JComboBox sortBox;
    // End of variables declaration//GEN-END:variables
}
